import RPi.GPIO as GPIO
import time
import math

GPIO.setmode(GPIO.BCM)

p = [21, 20, 16, 12, 26, 19, 13, 6, 5, 14]  # LED pins
button = 4
f_pwm = 500  # PWM base frequency
f_B = 0.2    # brightness variation frequency
phi = math.pi / 11
b = 1        # direction multiplier

GPIO.setup(button, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)

pwms = []
for pin in p:
    GPIO.setup(pin, GPIO.OUT)
    pwms.append(GPIO.PWM(pin, f_pwm))

# Callback function for button press
def switch(channel):
    global b
    b = -b  # reverse wave direction

GPIO.add_event_detect(button, GPIO.RISING, callback=switch, bouncetime=100)

try:
    for pwm in pwms:
        pwm.start(0)

    t_0 = time.time()

    while True:
        t = time.time() - t_0

        for i, pwm in enumerate(pwms):
            B = math.sin(2 * math.pi * f_B * t - b * i * phi) ** 2
            pwm.ChangeDutyCycle(100 * B)

except KeyboardInterrupt:
    print('\nExiting...')
    for pwm in pwms:
        pwm.stop()
    GPIO.cleanup()
